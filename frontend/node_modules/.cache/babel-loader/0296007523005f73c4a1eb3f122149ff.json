{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphql-operation\\\\graphql-app\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { CREATE_POST, DELETE_POST } from \"./GraphQL/Mutation\";\nimport { getALL } from \"./GraphQL/Query\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getALL);\n  const [createPost, {\n    err\n  }] = useMutation(CREATE_POST);\n  const [deletePost, {\n    errr\n  }] = useMutation(DELETE_POST);\n  const [title, setTitle] = useState(null);\n  const [description, setDescription] = useState(null);\n  if (loading) return \"Loading\";\n\n  const addPost = () => {\n    createPost({\n      variables: {\n        title: title,\n        description: description\n      }\n    });\n  };\n\n  const removePost = id => {\n    deletePost({\n      variables: {\n        id: id\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: \"GraphQL Operation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [data.getAll.map(data => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"TITLE : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }, this), data.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 50\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"DESCRIPTION : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }, this), data.description]\n          }, data.title, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removePost(data.id),\n            children: \" Delete it \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)\n      }, void 0, false)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"TITLE ---\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"DESCRIPTION ---\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addPost(),\n          children: \"Add Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"/Kl91WD+Doac1Lf5yGCJhFrOAX8=\", false, function () {\n  return [useQuery, useMutation, useMutation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/graphql-operation/graphql-app/client/src/App.js"],"names":["useMutation","useQuery","CREATE_POST","DELETE_POST","getALL","useState","App","loading","error","data","createPost","err","deletePost","errr","title","setTitle","description","setDescription","addPost","variables","removePost","id","getAll","map","e","target","value"],"mappings":"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","sourcesContent":["import \"./App.css\";\n\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { CREATE_POST, DELETE_POST } from \"./GraphQL/Mutation\";\nimport { getALL } from \"./GraphQL/Query\";\nimport { useState } from \"react\";\nfunction App() {\n  const { loading, error, data } = useQuery(getALL);\n  const [createPost, { err }] = useMutation(CREATE_POST);\n  const [deletePost, { errr }] = useMutation(DELETE_POST);\n  const [title, setTitle] = useState(null);\n  const [description, setDescription] = useState(null);\n  if (loading) return \"Loading\";\n  const addPost = () => {\n    createPost({\n      variables: {\n        title: title,\n        description: description,\n      },\n    });\n  };\n  const removePost = (id) => {\n    deletePost({\n      variables: {\n        id: id,\n      },\n    });\n  };\n\n  return (\n    <>\n    <header className=\"App-header\">GraphQL Operation</header>\n    <div className=\"App\">\n      {data.getAll.map((data) => (\n        <>\n        <div className=\"data\">\n          <p key={data.title}>\n            <strong>TITLE : </strong>{data.title}<br></br>\n            <strong>DESCRIPTION : </strong>{data.description}\n          </p>\n          <button onClick={() => removePost(data.id)}> Delete it </button>\n          </div>\n        </>\n        \n      ))}\n      <br />\n      <div className=\"post\">\n      <strong>TITLE ---</strong><input onChange={(e) => setTitle(e.target.value)} />\n      <br />\n      <strong>DESCRIPTION ---</strong>\n      <input onChange={(e) => setDescription(e.target.value)} />\n      <br />\n      <button onClick={() => addPost()}>Add Post</button>\n      </div>\n      </div>\n      </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}